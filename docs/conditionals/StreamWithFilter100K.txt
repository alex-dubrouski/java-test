....[Hottest Region 1]..............................................................................
 [kernel.kallsyms], native_write_msr_safe (0 bytes)

 <no assembly is recorded, native region>
....................................................................................................
 24.80%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, java.util.ArrayList$ArrayListSpliterator::forEachRemaining, version 753 (166 bytes)

                                                                       ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
             0x00007f0b43a0df86: mov    %r11,%rsi                      ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@16 (line 1644)
         ╭   0x00007f0b43a0df89: jmp    0x00007f0b43a0dfbd
         │   0x00007f0b43a0df8b: mov    0xc(%rdi),%r8d                 ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
         │                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@38 (line 1646)
         │   0x00007f0b43a0df8f: mov    0x10(%rdi),%r9d                ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
         │                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@47 (line 1647)
         │   0x00007f0b43a0df93: jmp    0x00007f0b43a0df3b
         │   0x00007f0b43a0df95: data16 data16 nopw 0x0(%rax,%rax,1)
  0.04%  │↗  0x00007f0b43a0dfa0: mov    (%rsp),%rcx
  0.30%  ││  0x00007f0b43a0dfa4: mov    0x8(%rsp),%r11d
  0.08%  ││  0x00007f0b43a0dfa9: mov    0xc(%rsp),%r9d
  0.15%  ││  0x00007f0b43a0dfae: mov    0x10(%rsp),%r8d
  0.19%  ││  0x00007f0b43a0dfb3: mov    0x18(%rsp),%rbx
  0.30%  ││  0x00007f0b43a0dfb8: mov    0x20(%rsp),%rsi                ;*aload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@86 (line 1653)
  0.11%  ↘│  0x00007f0b43a0dfbd: mov    0x10(%rbx),%r10d               ;*getfield this$1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@1 (line 176)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
  0.23%   │  0x00007f0b43a0dfc1: mov    0x34(%r10),%edx                ;*getfield val$predicate {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@4 (line 176)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
          │                                                            ; implicit exception: dispatches to 0x00007f0b43a0e18f
  0.68%   │  0x00007f0b43a0dfc5: mov    0x10(%r11,%rbp,4),%edi         ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1653)
  0.26%   │  0x00007f0b43a0dfca: mov    0x8(%rdx),%eax                 ; implicit exception: dispatches to 0x00007f0b43a0e19e
 11.29%   │  0x00007f0b43a0dfcd: cmp    $0x235608,%eax                 ;   {metadata(&apos;org/ad/StreamWithFilterBenchmark$$Lambda$46&apos;)}
          │  0x00007f0b43a0dfd3: jne    0x00007f0b43a0e092             ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 176)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
  0.15%   │  0x00007f0b43a0dfd9: mov    0x8(%rdi),%edx                 ; implicit exception: dispatches to 0x00007f0b43a0e1ae
  4.08%   │  0x00007f0b43a0dfdc: cmp    $0x6a2d6,%edx                  ;   {metadata(&apos;java/lang/String&apos;)}
  0.04%   │  0x00007f0b43a0dfe2: jne    0x00007f0b43a0e15a             ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.ad.StreamWithFilterBenchmark$$Lambda$46/0x00000008011ab040::test@1
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 176)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
          │  0x00007f0b43a0dfe8: mov    0xc(%rbx),%eax                 ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@17 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
  0.26%   │  0x00007f0b43a0dfeb: mov    %rdi,%rdx                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.ad.StreamWithFilterBenchmark$$Lambda$46/0x00000008011ab040::test@1
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 176)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
  0.30%   │  0x00007f0b43a0dfee: mov    0x8(%rax),%r10d                ; implicit exception: dispatches to 0x00007f0b43a0e1d6
  0.04%   │  0x00007f0b43a0dff2: cmp    $0x229f5e,%r10d                ;   {metadata(&apos;java/util/stream/ForEachOps$ForEachOp$OfRef&apos;)}
          │  0x00007f0b43a0dff9: jne    0x00007f0b43a0e0be
  0.38%   │  0x00007f0b43a0dfff: mov    %rax,%r10                      ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
  0.19%   │  0x00007f0b43a0e002: mov    0x10(%r10),%r10d               ;*getfield consumer {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ForEachOps$ForEachOp$OfRef::accept@1 (line 183)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
          │  0x00007f0b43a0e006: mov    0x8(%r10),%edi                 ; implicit exception: dispatches to 0x00007f0b43a0e1e6
          │  0x00007f0b43a0e00a: cmp    $0x235e08,%edi                 ;   {metadata(&apos;org/ad/StreamWithFilterBenchmark$$Lambda$63&apos;)}
  0.42%   │  0x00007f0b43a0e010: jne    0x00007f0b43a0e0ee             ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ForEachOps$ForEachOp$OfRef::accept@5 (line 183)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
  0.04%   │  0x00007f0b43a0e016: mov    0xc(%r10),%r10d                ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.ad.StreamWithFilterBenchmark$$Lambda$63/0x00000008011af040::accept@1
          │                                                            ; - java.util.stream.ForEachOps$ForEachOp$OfRef::accept@5 (line 183)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
          │  0x00007f0b43a0e01a: test   %r10d,%r10d
  0.19%   │  0x00007f0b43a0e01d: je     0x00007f0b43a0e082             ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.ad.StreamWithFilterBenchmark$$Lambda$63/0x00000008011af040::accept@8
          │                                                            ; - java.util.stream.ForEachOps$ForEachOp$OfRef::accept@5 (line 183)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
          │  0x00007f0b43a0e01f: mov    %rsi,0x20(%rsp)
  0.26%   │  0x00007f0b43a0e024: mov    %rbx,0x18(%rsp)
  0.23%   │  0x00007f0b43a0e029: mov    %r8d,0x10(%rsp)
  0.19%   │  0x00007f0b43a0e02e: mov    %r9d,0xc(%rsp)
  0.45%   │  0x00007f0b43a0e033: mov    %r11d,0x8(%rsp)
  0.49%   │  0x00007f0b43a0e038: mov    %rcx,(%rsp)                    ;*synchronization entry
          │                                                            ; - org.ad.StreamWithFilterBenchmark$$Lambda$63/0x00000008011af040::accept@-1
          │                                                            ; - java.util.stream.ForEachOps$ForEachOp$OfRef::accept@5 (line 183)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
  0.08%   │  0x00007f0b43a0e03c: mov    %r10,%rsi
  0.11%   │  0x00007f0b43a0e03f: callq  0x00007f0b3be56d80             ; ImmutableOopMap{[0]=Oop [8]=NarrowOop [24]=Oop [32]=Oop }
          │                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.ad.StreamWithFilterBenchmark$$Lambda$63/0x00000008011af040::accept@8
          │                                                            ; - java.util.stream.ForEachOps$ForEachOp$OfRef::accept@5 (line 183)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 177)
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1654)
          │                                                            ;   {optimized virtual_call}
          │  0x00007f0b43a0e044: inc    %ebp                           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@100 (line 1652)
  0.38%   │  0x00007f0b43a0e046: cmp    0xc(%rsp),%ebp
          ╰  0x00007f0b43a0e04a: jl     0x00007f0b43a0dfa0             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@83 (line 1652)
             0x00007f0b43a0e050: mov    (%rsp),%r10
             0x00007f0b43a0e054: mov    0x18(%r10),%edi                ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@107 (line 1656)
             0x00007f0b43a0e058: test   %edi,%edi
             0x00007f0b43a0e05a: je     0x00007f0b43a0e14e
             0x00007f0b43a0e060: mov    0x10(%rsp),%r8d                ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@83 (line 1652)
....................................................................................................
 21.90%  <total for region 2>
