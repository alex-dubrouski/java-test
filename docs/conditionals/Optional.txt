....[Hottest Region 1]..............................................................................
 [kernel.kallsyms], native_read_msr_safe (34 bytes)

 <no assembly is recorded, native region>
....................................................................................................
 28.57%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ad.OptionalBenchmark::walk, version 752 (252 bytes)

                                                                        ; - org.ad.OptionalBenchmark::walk@4 (line 73)
              0x00007fbffc488c26: test   %ebp,%ebp
              0x00007fbffc488c28: jle    0x00007fbffc488da3             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - org.ad.OptionalBenchmark::walk@7 (line 73)
              0x00007fbffc488c2e: mov    %rdx,%r8
              0x00007fbffc488c31: test   %rdx,%rdx
              0x00007fbffc488c34: je     0x00007fbffc488e3e
              0x00007fbffc488c3a: xor    %r10d,%r10d
         ╭    0x00007fbffc488c3d: jmp    0x00007fbffc488c80
         │    0x00007fbffc488c3f: nop
  0.14%  │ ↗  0x00007fbffc488c40: mov    %r11d,0x8(%rsp)
  0.32%  │ │  0x00007fbffc488c45: mov    %r8,(%rsp)
  0.04%  │ │  0x00007fbffc488c49: mov    %r9,%rbp
         │ │  0x00007fbffc488c4c: mov    %r10,%rdx                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                            ; - org.ad.OptionalBenchmark$$Lambda$53/0x00000008011ac840::accept@5
         │ │                                                            ; - java.util.Optional::ifPresent@12 (line 183)
         │ │                                                            ; - org.ad.OptionalBenchmark::walk@37 (line 74)
         │ │  0x00007fbffc488c4f: mov    %r8,%rsi
  0.18%  │ │  0x00007fbffc488c52: nop
         │ │  0x00007fbffc488c53: callq  0x00007fbff48d0300             ; ImmutableOopMap{rbp=Oop [0]=Oop }
         │ │                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                            ; - org.ad.OptionalBenchmark$$Lambda$53/0x00000008011ac840::accept@8
         │ │                                                            ; - java.util.Optional::ifPresent@12 (line 183)
         │ │                                                            ; - org.ad.OptionalBenchmark::walk@37 (line 74)
         │ │                                                            ;   {optimized virtual_call}
  0.11%  │ │  0x00007fbffc488c58: mov    %rbp,%r9
         │ │  0x00007fbffc488c5b: mov    (%rsp),%r8
  0.18%  │ │  0x00007fbffc488c5f: mov    0x8(%rsp),%r11d                ;*return {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                            ; - java.util.Optional::ifPresent@17 (line 185)
         │ │                                                            ; - org.ad.OptionalBenchmark::walk@37 (line 74)
  0.18%  │↗│  0x00007fbffc488c64: mov    -0x8(%r9),%rcx                 ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
         │││                                                            ; - org.ad.OptionalBenchmark::walk@4 (line 73)
  0.07%  │││  0x00007fbffc488c68: mov    0xc(%rcx),%ebx
         │││  0x00007fbffc488c6b: inc    %r11d                          ; ImmutableOopMap{r8=Oop r9=Oop rcx=Oop }
         │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
         │││                                                            ; - org.ad.OptionalBenchmark::walk@43 (line 73)
  0.11%  │││  0x00007fbffc488c6e: test   %eax,0x173ac38c(%rip)        # 0x00007fc013835000
         │││                                                            ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │││                                                            ; - org.ad.OptionalBenchmark::walk@43 (line 73)
         │││                                                            ;   {poll}
         │││  0x00007fbffc488c74: cmp    %ebx,%r11d
  0.11%  │││  0x00007fbffc488c77: jge    0x00007fbffc488da3             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │││                                                            ; - org.ad.OptionalBenchmark::walk@7 (line 73)
  0.04%  │││  0x00007fbffc488c7d: mov    %r11d,%r10d                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
         │││                                                            ; - org.ad.OptionalBenchmark::walk@10 (line 74)
  0.11%  ↘││  0x00007fbffc488c80: mov    0x10(%rcx),%ecx                ;*getfield lst {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - org.ad.OptionalBenchmark::walk@11 (line 74)
  0.11%   ││  0x00007fbffc488c83: mov    0x8(%rcx),%r11d                ; implicit exception: dispatches to 0x00007fbffc488e76
  0.14%   ││  0x00007fbffc488c87: cmp    $0x603c4,%r11d                 ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0.07%   ││  0x00007fbffc488c8e: jne    0x00007fbffc488dfa             ;*invokeinterface get {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - org.ad.OptionalBenchmark::walk@15 (line 74)
  0.14%   ││  0x00007fbffc488c94: mov    -0x8(%rcx),%rbx
  0.21%   ││  0x00007fbffc488c98: mov    0x10(%rbx),%r11d               ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.ArrayList::get@2 (line 458)
          ││                                                            ; - org.ad.OptionalBenchmark::walk@15 (line 74)
  0.11%   ││  0x00007fbffc488c9c: test   %r11d,%r11d
  0.04%   ││  0x00007fbffc488c9f: jl     0x00007fbffc488e16             ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.Objects::checkIndex@3 (line 372)
          ││                                                            ; - java.util.ArrayList::get@5 (line 458)
          ││                                                            ; - org.ad.OptionalBenchmark::walk@15 (line 74)
  0.25%   ││  0x00007fbffc488ca5: cmp    %r11d,%r10d
  0.21%   ││  0x00007fbffc488ca8: jae    0x00007fbffc488daf
  0.18%   ││  0x00007fbffc488cae: mov    0x14(%rbx),%ebx                ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.ArrayList::elementData@1 (line 442)
          ││                                                            ; - java.util.ArrayList::get@11 (line 459)
          ││                                                            ; - org.ad.OptionalBenchmark::walk@15 (line 74)
          ││  0x00007fbffc488cb1: mov    %r10d,%r11d                    ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.Objects::checkIndex@3 (line 372)
          ││                                                            ; - java.util.ArrayList::get@5 (line 458)
          ││                                                            ; - org.ad.OptionalBenchmark::walk@15 (line 74)
  0.32%   ││  0x00007fbffc488cb4: mov    0xc(%rbx),%edi                 ; implicit exception: dispatches to 0x00007fbffc488e86
  0.32%   ││  0x00007fbffc488cb7: cmp    %edi,%r11d
  0.18%   ││  0x00007fbffc488cba: jae    0x00007fbffc488dd6
          ││  0x00007fbffc488cc0: mov    -0x8(%r12,%rbx,1),%r10
  0.14%   ││  0x00007fbffc488cc5: mov    0x10(%r10,%r11,4),%r10d        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.ArrayList::elementData@5 (line 442)
          ││                                                            ; - java.util.ArrayList::get@11 (line 459)
          ││                                                            ; - org.ad.OptionalBenchmark::walk@15 (line 74)
 11.18%   ││  0x00007fbffc488cca: test   %r10d,%r10d
  0.14%   ││  0x00007fbffc488ccd: je     0x00007fbffc488d66
  0.04%   ││  0x00007fbffc488cd3: mov    0x8(%r10),%ebx
  0.32%   ││  0x00007fbffc488cd7: cmp    $0x6a2d6,%ebx                  ;   {metadata(&apos;java/lang/String&apos;)}
  0.07%   ││  0x00007fbffc488cdd: jne    0x00007fbffc488e56
          ││  0x00007fbffc488ce3: mov    0x118(%r15),%rax
          ││  0x00007fbffc488cea: mov    %rax,%rcx
  0.18%   ││  0x00007fbffc488ced: add    $0x18,%rcx
          ││  0x00007fbffc488cf1: mov    %r10,%rbp                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - org.ad.OptionalBenchmark::walk@20 (line 74)
          ││  0x00007fbffc488cf4: cmp    0x128(%r15),%rcx
          ││  0x00007fbffc488cfb: jae    0x00007fbffc488d72
  0.21%   ││  0x00007fbffc488cfd: mov    %rcx,0x118(%r15)
  0.04%   ││  0x00007fbffc488d04: add    $0x8,%rax
  0.25%   ││  0x00007fbffc488d08: mov    %rax,-0x8(%rax)
  0.39%   ││  0x00007fbffc488d0c: movq   $0x1,(%rax)
  0.25%   ││  0x00007fbffc488d13: movl   $0x5f193,0x8(%rax)             ;   {metadata(&apos;java/util/Optional&apos;)}
  0.32%   ││  0x00007fbffc488d1a: movl   $0x0,0xc(%rax)                 ;*new {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.Optional::of@0 (line 120)
          ││                                                            ; - java.util.Optional::ofNullable@11 (line 133)
          ││                                                            ; - org.ad.OptionalBenchmark::walk@23 (line 74)
  1.44%   ││  0x00007fbffc488d21: mov    -0x8(%rbp),%r10
          ││  0x00007fbffc488d25: mov    %r10,%rcx
  0.32%   ││  0x00007fbffc488d28: mov    %ecx,0xc(%rax)                 ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - org.ad.OptionalBenchmark$$Lambda$53/0x00000008011ac840::get$Lambda@5
          ││                                                            ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
          ││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
          ││                                                            ; - org.ad.OptionalBenchmark::walk@32 (line 74)
  1.75%   ││  0x00007fbffc488d2b: mov    0xc(%rax),%r10d                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.Optional::ifPresent@1 (line 182)
          ││                                                            ; - org.ad.OptionalBenchmark::walk@37 (line 74)
  0.11%   ││  0x00007fbffc488d2f: test   %r10d,%r10d
          ╰│  0x00007fbffc488d32: je     0x00007fbffc488c64             ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.Optional::ifPresent@4 (line 182)
           │                                                            ; - org.ad.OptionalBenchmark::walk@37 (line 74)
  0.11%    │  0x00007fbffc488d38: mov    0x8(%r10),%ecx
  0.28%    │  0x00007fbffc488d3c: cmp    $0x6a2d6,%ecx                  ;   {metadata(&apos;java/lang/String&apos;)}
           ╰  0x00007fbffc488d42: je     0x00007fbffc488c40
              0x00007fbffc488d48: mov    $0xffffffde,%esi
              0x00007fbffc488d4d: mov    %r9,%rbp
              0x00007fbffc488d50: mov    %r11d,0x8(%rsp)
              0x00007fbffc488d55: mov    %r8,0x10(%rsp)
              0x00007fbffc488d5a: mov    %r10d,0xc(%rsp)
              0x00007fbffc488d5f: callq  0x00007fbff48d1800             ; ImmutableOopMap{rbp=Oop [12]=NarrowOop [16]=Oop }
                                                                        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - org.ad.OptionalBenchmark$$Lambda$53/0x00000008011ac840::accept@5
                                                                        ; - java.util.Optional::ifPresent@12 (line 183)
....................................................................................................
 21.28%  <total for region 2>
